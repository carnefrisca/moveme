Overview:

  The moveclient is a Linux dynamic shared library that handles connecting to and receiving Move data from a PS3 running as a MoveServer.  The moveclient maintains two connections to the MoveServer: the first uses a blocking TCP socket and acts as a control channel; the second uses a non-blocking UDP socket, runs in a separate thread, and acts a transfer channel.  Please note that this library is meant to be loaded on a per process basis and is not thread safe.


Usage:

  The library exposes the following functions: serverConnect, serverDisconnect, pause, resume, pauseCamera, resumeCamera, updateDelay, cameraUpdateDelay, rumble, forceRGB, trackHues, prepareCamera, cameraSetNumSlices.
  

  serverConnect:
  
    Connect handles connecting to the PS3 MoveServer.  It accepts three parameters: a pointer to a character array containing either a remote address or an ip address; a pointer to a character array containing a port, and pointer to a MoveStateDeferred.   Upon a successful connection, Connect fires off a thread in which the UpdateMoveState function (which recieves controller and camera data) will execute. 
    
    The UpdateMoveState function accepts a pointer to a MoveStateDeferred, and relies on select() to allow it to perform network communication in an asynchronous manner.  Upon receiving a packet, UpdateMoveState deserializes the header to determine the type of packet it has recieved.  A packet is either of the type MoveServerPacket and contains controller state, or of the type MoveServerCameraFrameSlice and contains an image slice from the camera.  For each type of packet, the data is first deserialized and then the respective callback function taken from the MoveStateDeferred structure invoked.  If a callback funtions returns an error the associated update failure function is invoked with the error return code from the failed invocation.
    
    The desired behavior of the success callback functions are that they copy the passed in data into a different structure for further processing and return immediately to avoid blocking the UpdateMoveState thread.  Multiple calls to Connect after a successful connection will return successfully and have no effect.


  serverDisconnect:

    Disconnect handles disconnecting from the PS3 MoveServer.  It takes care of cleanly shutting down the network connection with the MoveServer, stopping the transfer thread, and closing the TCP and UDP sockets.  Multiple calls to Disconnect will return successfully and have no effect.  You MUST call Disconnect before unloading the library in order for the proper cleanup to occur.


  pause:

    Pause informs the MoveServer to stop sending it MoveServerPackets (controller data) over the UDP socket.


  resume:

    Resume informs the MoveServer to resume sending it MoveServerPackets (controller data) over the UDP socket.


  pauseCamera:

    PauseCamera informs the MoveServer to stop sending it MoveServerCameraFrameSlicePackets (camera frames) over the UDP socket.


  resumeCamera:

    ResumeCamera informs the MoveServer to resume sending it MoveServerCameraFrameSlicePackets (camera frames) over the UDP socket.


  updateDelay:

    UpdateDelay allows you to alter the delay which the MoveServer is sending MoveServerPackets.  The value should fall into the range of 1 - 1000, and represents the millisecond delay interval at which packets will be sent.  For example, passing a value of 16 will result in a packet being sent every 16ms, equal to a frequency of 60hz.


  cameraUpdateDelay:

    CameraUpdateDelay allows you to alter the delay which the MoveServer is sending MoveServerCameraFrameSlicePackets.  The value should fall into the range of 1 - 1000, and represents the millisecond delay interval at which packets will be sent.  For example, passing a value of 16 will result in a packet being sent every 16ms, equal to a frequency of 60hz.


  rumble:

    Rumble turns on rumble for the specified controller.  Its accepts a controller number and a rumble value in the range of 1 - 100 which indicates the strength at which the controller should rumble.


  forceRGB:

    ForceRGB will force the specified controller to change it's color to the specified r,g,b values.  Valid r,g,b values are between 0 and 1.0.


  trackHues:
    
    Starts hue tracking for the specified controller.

  
  prepareCamera:

    Sets the maximum exposure and the image quality for the camera.


  cameraSetNumSlices:

    Sets the number of slices the camera image will be divided into.  Valid slice values are in the range of 1 - 8.

